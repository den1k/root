{"version":3,"sources":["kitchen_async/promise.cljs"],"mappings":"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","names":["kitchen-async.promise/%promise-impl","init","js/Promise","js/goog.Promise","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","cljs.core/deref","kitchen-async.promise/promise-impl","kitchen-async.promise/set-promise-impl!","impl","cljs.core/reset!","kitchen-async.promise/resolve","x","p","resolve","kitchen-async.promise/reject","_","reject","var_args","G__102891","kitchen-async.promise/then","js/Error","f","kitchen-async.promise/->promise","g","kitchen-async.promise/catch*","kitchen_async.promise.then.cljs$core$IFn$_invoke$arity$3","cljs.core/identity","kitchen-async.promise/finally*","kitchen-async.promise/all","ps","G__102892","js/goog.Promise.all","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","cljs.core.map.cljs$core$IFn$_invoke$arity$2","kitchen-async.promise/race","G__102893","js/goog.Promise.race","G__102895","kitchen-async.promise/timeout","ms","kitchen_async.promise.timeout.cljs$core$IFn$_invoke$arity$2","v","p__49755__auto__","js/setTimeout","cljs.core/PROTOCOL_SENTINEL","goog.object/set","kitchen-async.protocols.promisable/Promisable","G__102897","kitchen-async.protocols.promisable/->promise*","G__102898","G__102899","kitchen-async.promise/promisify","args","err","val","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","callback"],"sourcesContent":["(ns kitchen-async.promise\n  (:refer-clojure :exclude [resolve])\n  (:require-macros [kitchen-async.promise :as p])\n  (:require goog.Promise\n            [kitchen-async.protocols.promisable :as promisable]))\n\n(def ^:private %promise-impl\n  (let [init (if (exists? js/Promise)\n               js/Promise\n               goog.Promise)]\n    (atom init)))\n\n(defn promise-impl []\n  @%promise-impl)\n\n(defn set-promise-impl! [impl]\n  (reset! %promise-impl impl))\n\n(defn resolve [x]\n  (let [p (promise-impl)]\n    (new p (fn [resolve] (resolve x)))))\n\n(defn reject [x]\n  (let [p (promise-impl)]\n    (new p (fn [_ reject] (reject x)))))\n\n(declare ->promise)\n\n(defn then\n  ([p f]\n   (.then (->promise p) (fn [x] (f x))))\n  ([p f g]\n   (.then (->promise p) (fn [x] (f x)) (fn [x] (g x)))))\n\n(defn catch* [p f]\n  (then p identity f))\n\n(defn finally* [p f]\n  (then p f f))\n\n(defn all [ps]\n  (goog.Promise.all (into-array (map ->promise ps))))\n\n(defn race [ps]\n  (goog.Promise.race (into-array (map ->promise ps))))\n\n(defn timeout\n  ([ms] (timeout ms nil))\n  ([ms v]\n   (p/promise [resolve]\n     (js/setTimeout #(resolve v) ms))))\n\n(extend-protocol promisable/Promisable\n  goog.Promise\n  (->promise* [p] p)\n\n  default\n  (->promise* [x]\n    (resolve x)))\n\n(when (exists? js/Promise)\n  (extend-type js/Promise\n    promisable/Promisable\n    (->promise* [p] p)))\n\n(defn ->promise [x]\n  (promisable/->promise* x))\n\n(defn promisify\n  \"Given a fn that takes a callback fn as its last arg, and returns\n  a modified version of that fn that returns a promise instead of\n  calling the callback\"\n  [f]\n  (fn [& args]\n    (p/promise [resolve reject]\n      (letfn [(callback [err val]\n                (if err\n                  (reject err)\n                  (resolve val)))]\n        (apply f (concat args [callback]))))))\n"]}